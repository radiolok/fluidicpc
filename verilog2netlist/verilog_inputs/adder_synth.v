/* Generated by Yosys 0.21 (git sha1 e6d2a900a97, clang 7.0.1-8+deb10u2 -fPIC -Os) */

(* src = "adder.v:2.1-12.10" *)
module FA(ci, A, B, out, co);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  (* src = "adder.v:4.12-4.13" *)
  input A;
  wire A;
  (* src = "adder.v:5.12-5.13" *)
  input B;
  wire B;
  (* src = "adder.v:3.12-3.14" *)
  input ci;
  wire ci;
  (* src = "adder.v:7.13-7.15" *)
  output co;
  wire co;
  (* src = "adder.v:6.13-6.16" *)
  output out;
  wire out;
  NOT _09_ (
    .A(A),
    .Y(_05_)
  );
  NOT _10_ (
    .A(ci),
    .Y(_06_)
  );
  NOT _11_ (
    .A(B),
    .Y(_07_)
  );
  NOR _12_ (
    .A(_05_),
    .B(_06_),
    .Y(_08_)
  );
  NOR _13_ (
    .A(A),
    .B(ci),
    .Y(_00_)
  );
  NOR _14_ (
    .A(_08_),
    .B(_00_),
    .Y(_01_)
  );
  OR _15_ (
    .A(_08_),
    .B(_00_),
    .Y(_02_)
  );
  NOR _16_ (
    .A(_07_),
    .B(_02_),
    .Y(_03_)
  );
  OR _17_ (
    .A(_08_),
    .B(_03_),
    .Y(co)
  );
  NOR _18_ (
    .A(B),
    .B(_01_),
    .Y(_04_)
  );
  NOR _19_ (
    .A(_03_),
    .B(_04_),
    .Y(out)
  );
endmodule

(* top =  1  *)
(* src = "adder.v:14.1-42.10" *)
(* dynports =  1  *)
(* hdlname = "\\adder" *)
module adder(ci, \A[0] , \A[1] , \A[2] , \A[3] , \B[0] , \B[1] , \B[2] , \B[3] , \out[0] , \out[1] , \out[2] , \out[3] , co);
  (* src = "adder.v:18.24-18.25" *)
  input \A[0] ;
  wire \A[0] ;
  (* src = "adder.v:18.24-18.25" *)
  input \A[1] ;
  wire \A[1] ;
  (* src = "adder.v:18.24-18.25" *)
  input \A[2] ;
  wire \A[2] ;
  (* src = "adder.v:18.24-18.25" *)
  input \A[3] ;
  wire \A[3] ;
  (* src = "adder.v:28.10-28.15" *)
  wire \Add[0].c_out ;
  (* src = "adder.v:28.10-28.15" *)
  wire \Add[1].c_out ;
  (* src = "adder.v:28.10-28.15" *)
  wire \Add[2].c_out ;
  (* src = "adder.v:28.10-28.15" *)
  wire \Add[3].c_out ;
  (* src = "adder.v:19.24-19.25" *)
  input \B[0] ;
  wire \B[0] ;
  (* src = "adder.v:19.24-19.25" *)
  input \B[1] ;
  wire \B[1] ;
  (* src = "adder.v:19.24-19.25" *)
  input \B[2] ;
  wire \B[2] ;
  (* src = "adder.v:19.24-19.25" *)
  input \B[3] ;
  wire \B[3] ;
  (* src = "adder.v:17.12-17.14" *)
  input ci;
  wire ci;
  (* src = "adder.v:21.13-21.15" *)
  output co;
  wire co;
  (* src = "adder.v:20.25-20.28" *)
  output \out[0] ;
  wire \out[0] ;
  (* src = "adder.v:20.25-20.28" *)
  output \out[1] ;
  wire \out[1] ;
  (* src = "adder.v:20.25-20.28" *)
  output \out[2] ;
  wire \out[2] ;
  (* src = "adder.v:20.25-20.28" *)
  output \out[3] ;
  wire \out[3] ;
  (* module_not_derived = 32'd1 *)
  (* src = "adder.v:30.10-31.33" *)
  FA \Add[0].genblk1.fa  (
    .A(\A[0] ),
    .B(\B[0] ),
    .ci(ci),
    .co(\Add[0].c_out ),
    .out(\out[0] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "adder.v:34.10-35.45" *)
  FA \Add[1].genblk1.fa  (
    .A(\A[1] ),
    .B(\B[1] ),
    .ci(\Add[0].c_out ),
    .co(\Add[1].c_out ),
    .out(\out[1] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "adder.v:34.10-35.45" *)
  FA \Add[2].genblk1.fa  (
    .A(\A[2] ),
    .B(\B[2] ),
    .ci(\Add[1].c_out ),
    .co(\Add[2].c_out ),
    .out(\out[2] )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "adder.v:34.10-35.45" *)
  FA \Add[3].genblk1.fa  (
    .A(\A[3] ),
    .B(\B[3] ),
    .ci(\Add[2].c_out ),
    .co(\Add[3].c_out ),
    .out(\out[3] )
  );
  assign co = \Add[3].c_out ;
endmodule
